name: CI/CD Deploy to ECS Fargate with ALB and HTTPS

on:
  push:
    branches:
      - master

env:
  AWS_REGION: ${{ secrets.AWS_REGION }}
  ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
  ECS_CLUSTER: ${{ secrets.ECS_CLUSTER_NAME }}
  ECS_SERVICE: ${{ secrets.ECS_SERVICE_NAME }}
  TASK_DEF_FILE: ecs/task-def.json

jobs:
  deploy:
    name: Deploy to ECS Fargate
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Build Docker image
      run: |
        docker build -t ${{ secrets.ECR_REPOSITORY }} .

    - name: Tag Docker image
      run: |
        IMAGE_URI="${{ steps.login-ecr.outputs.registry }}/${{ secrets.ECR_REPOSITORY }}:latest"
        docker tag ${{ secrets.ECR_REPOSITORY }}:latest $IMAGE_URI
        echo "IMAGE_URI=$IMAGE_URI" >> $GITHUB_ENV

    - name: Push Docker image to ECR
      run: |
        docker push $IMAGE_URI

    - name: Update ECS task definition with image
      run: |
        sed "s|<IMAGE_URI>|${IMAGE_URI}|g" ${{ env.TASK_DEF_FILE }} > task-def-updated.json

    - name: Register new ECS task definition
      id: register-task-def
      run: |
        TASK_DEF_ARN=$(aws ecs register-task-definition \
          --cli-input-json file://task-def-updated.json \
          --query 'taskDefinition.taskDefinitionArn' --output text)
        echo "TASK_DEF_ARN=$TASK_DEF_ARN" >> $GITHUB_ENV

    - name: Deploy to ECS service
      run: |
        aws ecs update-service \
          --cluster ${{ env.ECS_CLUSTER }} \
          --service ${{ env.ECS_SERVICE }} \
          --task-definition ${{ env.TASK_DEF_ARN }} \
          --load-balancers "targetGroupArn=arn:aws:elasticloadbalancing:us-east-2:011528270926:targetgroup/ecs-tg/b93da1d721cc6de5,containerName=my-app,containerPort=3000" \
          --force-new-deployment
          
     
